name: GitHub Actions Demo

on:
  push:
    branches: [ main ]
    paths-ignore: [.github/**]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '15 6 * * 0'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: environment
        required: true
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  check-comment:
    if: github.event.issue.pull_request == null && startsWith(github.event.comment.body, '/set-environment ')
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - id: set-env
        run: echo "::set-output name=environment::$(echo '${{ github.event.comment.body }}' | cut -d ' ' -f2)"

  Build:
    runs-on: ubuntu-latest
    needs: check-comment
    if: needs.check-comment.outputs.environment != ''
    steps:
      - run: |
          echo "ðŸŽ‰ The job was triggered by event: ${{ github.event_name }}"
          echo "ðŸ”Ž The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - uses: actions/checkout@v3.3.0
      - name: List files in the repository
        run: |
          echo "The repository ${{ github.repository }} contains the following files:"
          tree

  Test:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || needs.check-comment.outputs.environment == 'Test'
    needs: Build
    environment: Test
    steps:
      - run: echo "ðŸ§ª Testing..."

  Load-Test:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || needs.check-comment.outputs.environment == 'Load-Test'
    needs: Build
    environment: Load-Test
    steps:
      - run: |
          echo "ðŸ§ª Load Testing..."
          sleep 15

  Production:
    runs-on: ubuntu-latest
    needs: [Test, Load-Test]
    if: github.event.inputs.environment == 'Production' || needs.check-comment.outputs.environment == 'Production'
    environment:
      name: Production
      url: https://writeabout.net
    steps:
      - run: |
          echo "ðŸš€ Step 1..."
          sleep 10
      - run: |
          echo "ðŸš€ Step 2..."
          sleep 10
      - run: |
          echo "ðŸš€ Step 3..."
          sleep 10
      - run: |
          echo "ðŸš€ Step 4..."
          sleep 10
      - run: |
          echo "ðŸš€ Step 5..."
          sleep 10
